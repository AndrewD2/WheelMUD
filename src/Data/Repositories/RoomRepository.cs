// <auto-generated />
//-----------------------------------------------------------------------------
// <copyright file="RoomRepository.cs" company="WheelMUD Development Team">
//   Copyright (c) WheelMUD Development Team. See LICENSE.txt. This file is
//   subject to the Microsoft Public License. All other rights reserved.
// </copyright>
// <summary>
//   auto-generated by Repository.cst on 4/9/2013 4:29:50 PM
// </summary>
//-----------------------------------------------------------------------------

namespace WheelMUD.Data.Repositories
{
    using System.Collections.Generic;
    using System.Data;
    using ServiceStack.OrmLite;
    using WheelMUD.Data.Entities;

    /// <summary>Repository for the Rooms table.</summary>
    public partial class RoomRepository : IRoomRepository
    {
        public void Add(RoomRecord room)
        {
            using (IDbCommand session = Helpers.OpenSession())
            using (IDbTransaction transaction = session.Connection.BeginTransaction())
            {
                session.Connection.Save(room);
                transaction.Commit();
            }
        }

        public void Update(RoomRecord room)
        {
            using (IDbCommand session = Helpers.OpenSession())
            using (IDbTransaction transaction = session.Connection.BeginTransaction())
            {
                session.Connection.Update(room);
                transaction.Commit();
            }
        }

        public void Remove(RoomRecord room)
        {
            using (IDbCommand session = Helpers.OpenSession())
            using (IDbTransaction transaction = session.Connection.BeginTransaction())
            {
                session.Connection.Delete(room);
                transaction.Commit();
            }
        }

        public RoomRecord GetById(long roomId)
        {
            using (IDbCommand session = Helpers.OpenSession())
                return session.Connection.SingleWhere<RoomRecord>("ID = {0}", roomId);
        }

        public RoomRecord GetByName(string name)
        {
            using (IDbCommand session = Helpers.OpenSession())
            {
                return session.Connection.SingleWhere<RoomRecord>("Name = {0}", name);
            }
        }

        public ICollection<RoomRecord> FetchAll()
        {
            using (IDbCommand session = Helpers.OpenSession())
            {
                return session.Connection.Select<RoomRecord>();
            }
        }
    }
}