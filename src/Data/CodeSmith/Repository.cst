<%@ Template Language="C#" TargetLanguage="C#" Debug="False" %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="DataSource" Optional="False" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="WheelMUD.CodeSmith.Utilities" %>

<%@ Import Namespace="System" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.Core.Extensions" %>
<%@ Import Namespace="WheelMUD.CodeSmith.Utilities" %>

<% string singularName = Inflector.MakeSingular(SourceTable.Name); %>
// <auto-generated />
//-----------------------------------------------------------------------------
// <copyright file="<%=Inflector.ToTitleCase(singularName).Replace(" ","")%>Repository.cs" company="WheelMUD Development Team">
//   Copyright (c) WheelMUD Development Team. See LICENSE.txt. This file is
//   subject to the Microsoft Public License. All other rights reserved.
// </copyright>
// <summary>
//   auto-generated by Repository.cst on <% = DateTime.Now.ToString() %>
// </summary>
//-----------------------------------------------------------------------------

namespace WheelMUD.Data.Repositories
{
    using System.Collections.Generic;
    using System.Data;
    using ServiceStack.OrmLite;
    using WheelMUD.Data.Entities;
    
    /// <summary>Repository for the <%=SourceTable.Name%> table.</summary>
    public partial class <%=Inflector.ToTitleCase(singularName).Replace(" ","")%>Repository : I<%=Inflector.ToTitleCase(singularName).Replace(" ","")%>Repository
    {
        public void Add(<%=Inflector.ToTitleCase(singularName).Replace(" ","")%>Record <%=singularName.ToLower() %>)
        {
            using (IDbCommand session = Helpers.OpenSession())
                using (IDbTransaction transaction = session.Connection.BeginTransaction())
                {
                    session.Connection.Save(<%=singularName.ToLower() %>);
                    transaction.Commit();
                }
        }

        public void Update(<%=Inflector.ToTitleCase(singularName).Replace(" ","")%>Record <%=singularName.ToLower() %>)
        {
            using (IDbCommand session = Helpers.OpenSession())
                using (IDbTransaction transaction = session.Connection.BeginTransaction())
                {
                    session.Connection.Update(<%=singularName.ToLower() %>);
                    transaction.Commit();
                }
        }

        public void Remove(<%=Inflector.ToTitleCase(singularName).Replace(" ","")%>Record <%=singularName.ToLower() %>)
        {
            using (IDbCommand session = Helpers.OpenSession())
                using (IDbTransaction transaction = session.Connection.BeginTransaction())
                {
                    session.Connection.Delete(<%=singularName.ToLower() %>);
                    transaction.Commit();
                }
        }
        
        public <%=Inflector.ToTitleCase(singularName).Replace(" ","")%>Record GetById(long <%=singularName.ToLower() %>Id)
        {
            using (IDbCommand session = Helpers.OpenSession())
                return session.Connection.SingleWhere<<%=Inflector.ToTitleCase(singularName).Replace(" ","")%>Record>("ID = {0}", <%=singularName.ToLower() %>Id);
        }

        public <%=Inflector.ToTitleCase(singularName).Replace(" ","")%>Record GetByName(string name)
        {
            using (IDbCommand session = Helpers.OpenSession())
            {
                return session.Connection.SingleWhere<<%=Inflector.ToTitleCase(singularName).Replace(" ","")%>Record>("Name = {0}", name);
            }
        }

        public ICollection<<%=Inflector.ToTitleCase(singularName).Replace(" ","")%>Record> FetchAll()
        {
            using (IDbCommand session = Helpers.OpenSession())
            {
                return session.Connection.Select<<%=Inflector.ToTitleCase(singularName).Replace(" ","")%>Record>();
            }
        }
    }
}